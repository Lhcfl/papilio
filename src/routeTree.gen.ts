/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SearchRouteImport } from './routes/search'
import { Route as PostingRouteImport } from './routes/posting'
import { Route as LoginRedirectRouteImport } from './routes/login-redirect'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as AnnouncementsRouteImport } from './routes/announcements'
import { Route as AtChar123acctChar125RouteImport } from './routes/@{$acct}'
import { Route as MissingRouteImport } from './routes/$missing'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as TagTagRouteImport } from './routes/tag/$tag'
import { Route as NotesIdRouteImport } from './routes/notes/$id'
import { Route as MyNotificationsRouteImport } from './routes/my/notifications'
import { Route as MyFavoritesRouteImport } from './routes/my/favorites'
import { Route as MyClipsRouteImport } from './routes/my/clips'
import { Route as ClipsIdRouteImport } from './routes/clips/$id'
import { Route as MyFollowRequestsRouteRouteImport } from './routes/my/follow-requests/route'
import { Route as MyFollowRequestsSentRouteImport } from './routes/my/follow-requests/sent'
import { Route as MyFollowRequestsReceivedRouteImport } from './routes/my/follow-requests/received'

const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const PostingRoute = PostingRouteImport.update({
  id: '/posting',
  path: '/posting',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRedirectRoute = LoginRedirectRouteImport.update({
  id: '/login-redirect',
  path: '/login-redirect',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const AnnouncementsRoute = AnnouncementsRouteImport.update({
  id: '/announcements',
  path: '/announcements',
  getParentRoute: () => rootRouteImport,
} as any)
const AtChar123acctChar125Route = AtChar123acctChar125RouteImport.update({
  id: '/@{$acct}',
  path: '/@{$acct}',
  getParentRoute: () => rootRouteImport,
} as any)
const MissingRoute = MissingRouteImport.update({
  id: '/$missing',
  path: '/$missing',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const TagTagRoute = TagTagRouteImport.update({
  id: '/tag/$tag',
  path: '/tag/$tag',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesIdRoute = NotesIdRouteImport.update({
  id: '/notes/$id',
  path: '/notes/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const MyNotificationsRoute = MyNotificationsRouteImport.update({
  id: '/my/notifications',
  path: '/my/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const MyFavoritesRoute = MyFavoritesRouteImport.update({
  id: '/my/favorites',
  path: '/my/favorites',
  getParentRoute: () => rootRouteImport,
} as any)
const MyClipsRoute = MyClipsRouteImport.update({
  id: '/my/clips',
  path: '/my/clips',
  getParentRoute: () => rootRouteImport,
} as any)
const ClipsIdRoute = ClipsIdRouteImport.update({
  id: '/clips/$id',
  path: '/clips/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const MyFollowRequestsRouteRoute = MyFollowRequestsRouteRouteImport.update({
  id: '/my/follow-requests',
  path: '/my/follow-requests',
  getParentRoute: () => rootRouteImport,
} as any)
const MyFollowRequestsSentRoute = MyFollowRequestsSentRouteImport.update({
  id: '/sent',
  path: '/sent',
  getParentRoute: () => MyFollowRequestsRouteRoute,
} as any)
const MyFollowRequestsReceivedRoute =
  MyFollowRequestsReceivedRouteImport.update({
    id: '/received',
    path: '/received',
    getParentRoute: () => MyFollowRequestsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$missing': typeof MissingRoute
  '/@{$acct}': typeof AtChar123acctChar125Route
  '/announcements': typeof AnnouncementsRoute
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/login-redirect': typeof LoginRedirectRoute
  '/posting': typeof PostingRoute
  '/search': typeof SearchRoute
  '/my/follow-requests': typeof MyFollowRequestsRouteRouteWithChildren
  '/clips/$id': typeof ClipsIdRoute
  '/my/clips': typeof MyClipsRoute
  '/my/favorites': typeof MyFavoritesRoute
  '/my/notifications': typeof MyNotificationsRoute
  '/notes/$id': typeof NotesIdRoute
  '/tag/$tag': typeof TagTagRoute
  '/settings': typeof SettingsIndexRoute
  '/my/follow-requests/received': typeof MyFollowRequestsReceivedRoute
  '/my/follow-requests/sent': typeof MyFollowRequestsSentRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$missing': typeof MissingRoute
  '/@{$acct}': typeof AtChar123acctChar125Route
  '/announcements': typeof AnnouncementsRoute
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/login-redirect': typeof LoginRedirectRoute
  '/posting': typeof PostingRoute
  '/search': typeof SearchRoute
  '/my/follow-requests': typeof MyFollowRequestsRouteRouteWithChildren
  '/clips/$id': typeof ClipsIdRoute
  '/my/clips': typeof MyClipsRoute
  '/my/favorites': typeof MyFavoritesRoute
  '/my/notifications': typeof MyNotificationsRoute
  '/notes/$id': typeof NotesIdRoute
  '/tag/$tag': typeof TagTagRoute
  '/settings': typeof SettingsIndexRoute
  '/my/follow-requests/received': typeof MyFollowRequestsReceivedRoute
  '/my/follow-requests/sent': typeof MyFollowRequestsSentRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$missing': typeof MissingRoute
  '/@{$acct}': typeof AtChar123acctChar125Route
  '/announcements': typeof AnnouncementsRoute
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/login-redirect': typeof LoginRedirectRoute
  '/posting': typeof PostingRoute
  '/search': typeof SearchRoute
  '/my/follow-requests': typeof MyFollowRequestsRouteRouteWithChildren
  '/clips/$id': typeof ClipsIdRoute
  '/my/clips': typeof MyClipsRoute
  '/my/favorites': typeof MyFavoritesRoute
  '/my/notifications': typeof MyNotificationsRoute
  '/notes/$id': typeof NotesIdRoute
  '/tag/$tag': typeof TagTagRoute
  '/settings/': typeof SettingsIndexRoute
  '/my/follow-requests/received': typeof MyFollowRequestsReceivedRoute
  '/my/follow-requests/sent': typeof MyFollowRequestsSentRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$missing'
    | '/@{$acct}'
    | '/announcements'
    | '/chat'
    | '/login'
    | '/login-redirect'
    | '/posting'
    | '/search'
    | '/my/follow-requests'
    | '/clips/$id'
    | '/my/clips'
    | '/my/favorites'
    | '/my/notifications'
    | '/notes/$id'
    | '/tag/$tag'
    | '/settings'
    | '/my/follow-requests/received'
    | '/my/follow-requests/sent'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$missing'
    | '/@{$acct}'
    | '/announcements'
    | '/chat'
    | '/login'
    | '/login-redirect'
    | '/posting'
    | '/search'
    | '/my/follow-requests'
    | '/clips/$id'
    | '/my/clips'
    | '/my/favorites'
    | '/my/notifications'
    | '/notes/$id'
    | '/tag/$tag'
    | '/settings'
    | '/my/follow-requests/received'
    | '/my/follow-requests/sent'
  id:
    | '__root__'
    | '/'
    | '/$missing'
    | '/@{$acct}'
    | '/announcements'
    | '/chat'
    | '/login'
    | '/login-redirect'
    | '/posting'
    | '/search'
    | '/my/follow-requests'
    | '/clips/$id'
    | '/my/clips'
    | '/my/favorites'
    | '/my/notifications'
    | '/notes/$id'
    | '/tag/$tag'
    | '/settings/'
    | '/my/follow-requests/received'
    | '/my/follow-requests/sent'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MissingRoute: typeof MissingRoute
  AtChar123acctChar125Route: typeof AtChar123acctChar125Route
  AnnouncementsRoute: typeof AnnouncementsRoute
  ChatRoute: typeof ChatRoute
  LoginRoute: typeof LoginRoute
  LoginRedirectRoute: typeof LoginRedirectRoute
  PostingRoute: typeof PostingRoute
  SearchRoute: typeof SearchRoute
  MyFollowRequestsRouteRoute: typeof MyFollowRequestsRouteRouteWithChildren
  ClipsIdRoute: typeof ClipsIdRoute
  MyClipsRoute: typeof MyClipsRoute
  MyFavoritesRoute: typeof MyFavoritesRoute
  MyNotificationsRoute: typeof MyNotificationsRoute
  NotesIdRoute: typeof NotesIdRoute
  TagTagRoute: typeof TagTagRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posting': {
      id: '/posting'
      path: '/posting'
      fullPath: '/posting'
      preLoaderRoute: typeof PostingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login-redirect': {
      id: '/login-redirect'
      path: '/login-redirect'
      fullPath: '/login-redirect'
      preLoaderRoute: typeof LoginRedirectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/announcements': {
      id: '/announcements'
      path: '/announcements'
      fullPath: '/announcements'
      preLoaderRoute: typeof AnnouncementsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/@{$acct}': {
      id: '/@{$acct}'
      path: '/@{$acct}'
      fullPath: '/@{$acct}'
      preLoaderRoute: typeof AtChar123acctChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$missing': {
      id: '/$missing'
      path: '/$missing'
      fullPath: '/$missing'
      preLoaderRoute: typeof MissingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tag/$tag': {
      id: '/tag/$tag'
      path: '/tag/$tag'
      fullPath: '/tag/$tag'
      preLoaderRoute: typeof TagTagRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes/$id': {
      id: '/notes/$id'
      path: '/notes/$id'
      fullPath: '/notes/$id'
      preLoaderRoute: typeof NotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my/notifications': {
      id: '/my/notifications'
      path: '/my/notifications'
      fullPath: '/my/notifications'
      preLoaderRoute: typeof MyNotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my/favorites': {
      id: '/my/favorites'
      path: '/my/favorites'
      fullPath: '/my/favorites'
      preLoaderRoute: typeof MyFavoritesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my/clips': {
      id: '/my/clips'
      path: '/my/clips'
      fullPath: '/my/clips'
      preLoaderRoute: typeof MyClipsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clips/$id': {
      id: '/clips/$id'
      path: '/clips/$id'
      fullPath: '/clips/$id'
      preLoaderRoute: typeof ClipsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my/follow-requests': {
      id: '/my/follow-requests'
      path: '/my/follow-requests'
      fullPath: '/my/follow-requests'
      preLoaderRoute: typeof MyFollowRequestsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my/follow-requests/sent': {
      id: '/my/follow-requests/sent'
      path: '/sent'
      fullPath: '/my/follow-requests/sent'
      preLoaderRoute: typeof MyFollowRequestsSentRouteImport
      parentRoute: typeof MyFollowRequestsRouteRoute
    }
    '/my/follow-requests/received': {
      id: '/my/follow-requests/received'
      path: '/received'
      fullPath: '/my/follow-requests/received'
      preLoaderRoute: typeof MyFollowRequestsReceivedRouteImport
      parentRoute: typeof MyFollowRequestsRouteRoute
    }
  }
}

interface MyFollowRequestsRouteRouteChildren {
  MyFollowRequestsReceivedRoute: typeof MyFollowRequestsReceivedRoute
  MyFollowRequestsSentRoute: typeof MyFollowRequestsSentRoute
}

const MyFollowRequestsRouteRouteChildren: MyFollowRequestsRouteRouteChildren = {
  MyFollowRequestsReceivedRoute: MyFollowRequestsReceivedRoute,
  MyFollowRequestsSentRoute: MyFollowRequestsSentRoute,
}

const MyFollowRequestsRouteRouteWithChildren =
  MyFollowRequestsRouteRoute._addFileChildren(
    MyFollowRequestsRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MissingRoute: MissingRoute,
  AtChar123acctChar125Route: AtChar123acctChar125Route,
  AnnouncementsRoute: AnnouncementsRoute,
  ChatRoute: ChatRoute,
  LoginRoute: LoginRoute,
  LoginRedirectRoute: LoginRedirectRoute,
  PostingRoute: PostingRoute,
  SearchRoute: SearchRoute,
  MyFollowRequestsRouteRoute: MyFollowRequestsRouteRouteWithChildren,
  ClipsIdRoute: ClipsIdRoute,
  MyClipsRoute: MyClipsRoute,
  MyFavoritesRoute: MyFavoritesRoute,
  MyNotificationsRoute: MyNotificationsRoute,
  NotesIdRoute: NotesIdRoute,
  TagTagRoute: TagTagRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
